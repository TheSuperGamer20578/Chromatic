plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = "io.github.thesupergamer20578"

repositories {
    maven {
        url "https://maven.terraformersmc.com/"
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        url "https://maven.pkg.github.com/thesupergamer20578/chroma/"
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.terraformersmc:modmenu:6.1.0-rc.4"
    modApi("me.shedaniel.cloth:cloth-config-fabric:10.0.96") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    implementation "io.github.thesupergamer20578:chroma:0.1.0-alpha.3"
    shadow "io.github.thesupergamer20578:chroma:0.1.0-alpha.3"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 11
    it.options.encoding 'UTF-8'
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    exclude "META-INF"
    exclude("org/apache/commons/lang3/**")
}

remapJar {
    dependsOn(shadowJar)
    mustRunAfter(shadowJar)
    inputFile = file(shadowJar.archiveFile)
}
